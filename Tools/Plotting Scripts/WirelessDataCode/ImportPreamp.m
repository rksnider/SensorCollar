%% Import data from text file.
% Script for importing data from the following text file:
%
%    C:\Users\s58p233\Dropbox\SummerWork2015\WirelessData\20150724Data\07232015_preamp
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2015/07/27 13:38:07

%% Initialize variables.
filename = 'C:\Users\s58p233\Dropbox\SummerWork2015\WirelessData\20150724Data\07232015_preamp';

%% Read columns of data as strings:
% For more information, see the TEXTSCAN documentation.
formatSpec = '%12s%*2*s%*5*s%*2*s%*3*s%*3*s%*3*s%*3*s%*3*s%*3*s%*3*s%*3*s%*3*s%*3*s%*3*s%*3*s%*3*s%*3*s%*3*s%*3*s%*3*s%*3*s%*3*s%*3*s%*3*s%*3*s%*3*s%*3*s%*3*s%*3*s%*3*s%*3*s%*3s%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', '', 'WhiteSpace', '',  'ReturnOnError', false);

%% Remove white space around all cell columns.
dataArray{2} = strtrim(dataArray{2});

%% Close the text file.
fclose(fileID);

%% Convert the contents of columns containing numeric strings to numbers.
% Replace non-numeric strings with NaN.
raw = repmat({''},length(dataArray{1}),length(dataArray)-1);
for col=1:length(dataArray)-1
    raw(1:length(dataArray{col}),col) = dataArray{col};
end
numericData = NaN(size(dataArray{1},1),size(dataArray,2));

% Convert the contents of columns with dates to MATLAB datetimes using date
% format string.
try
    dates{1} = datetime(dataArray{1}, 'Format', 'HH:mm:ss', 'InputFormat', 'HH:mm:ss');
catch
    try
        % Handle dates surrounded by quotes
        dataArray{1} = cellfun(@(x) x(2:end-1), dataArray{1}, 'UniformOutput', false);
        dates{1} = datetime(dataArray{1}, 'Format', 'HH:mm:ss', 'InputFormat', 'HH:mm:ss');
    catch
        dates{1} = repmat(datetime([NaN NaN NaN]), size(dataArray{1}));
    end
end

anyBlankDates = cellfun(@isempty, dataArray{1});
anyInvalidDates = isnan(dates{1}.Hour) - anyBlankDates;
dates = dates(:,1);

%% Split data into numeric and cell columns.
rawNumericColumns = {};
rawCellColumns = raw(:, 2);


%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),rawNumericColumns); % Find non-numeric cells
rawNumericColumns(R) = {NaN}; % Replace non-numeric cells

%% Allocate imported array to column variable names
PreampTime = dates{:, 1};
PreampRSSI = rawCellColumns(:, 1);

% For code requiring serial dates (datenum) instead of datetime, uncomment
% the following line(s) below to return the imported dates as datenum(s).

% PreampTime=datenum(PreampTime);


%% Clear temporary variables
clearvars filename formatSpec fileID dataArray ans raw col numericData dates blankDates anyBlankDates invalidDates anyInvalidDates rawCellColumns rawNumericColumns R;